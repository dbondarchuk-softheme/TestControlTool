@using BootstrapSupport
@using TestControlTool.Core.Models
@using TestControlTool.Web.BootstrapSupport.HtmlHelpers
@model MachineConfigurationModel
@{
    Layout = null;
}

<script src="@Url.Content("~/Scripts/jquery.form.min.js")"></script>

<div class="modal hide fade" id="MachineConfiguratingModal" tabindex="-1" role="dialog" aria-labelledby="Configure Machine" aria-hidden="true">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
        <h3 id="MachineConfiguratingLabel">Configure Machine</h3>
    </div>
    @using (Html.BeginForm("Configure", "Machine", FormMethod.Post, new { id = "MachineConfiguratingForm" }))
    {
        <div class="modal-body">
            <div class="well alert-info">
                <p>This module will configure your machine for autodeploy. For applying all changes, you should do some steps:</p>
                <ul>
                    <li>If it's a HyperV machine
                        <ul>
                            <li>Revert machine from the snapshot</li>
                            <li>Run configuration</li>
                            <li>Take the snapshot</li>
                        </ul>
                    </li>
                    <li>If it's a VCenter machine
                        <ul>
                            <li>Convert template to the virtual machine and power it on</li>
                            <li>Run configuration</li>
                            <li>Convert back to the template</li>
                        </ul>
                    </li>
                </ul>
            </div>
            @Html.ValidationSummary(true)
            @foreach (var property in Model.VisibleProperties(MachineConfigurationModel.HiddenProperties))
            {
                using (Html.ControlGroupFor(property.Name))
                {
                    @Html.Label(property.Name, property.GetLabel(), new { @class = "control-label" })
                    <div class="controls">
                        @if (property.PropertyType.IsEnum)
                        {
                            @Html.EnumDropDownList(property.Name, property.PropertyType)
                        }
                        else
                        {
                            @Html.Editor(property, null, new { @class = "input-xlarge" })
                        }
                        @Html.ValidationMessage(property.Name, null, new { @class = "help-inline" })
                    </div>
                }
            }
            @using (Html.ControlGroupFor("TimeZoneName"))
            {
                @Html.Label("TimeZoneName", "Time Zone", new { @class = "control-label" })
                <div class="controls">
                    <select id="TimeZoneName" name="TimeZoneName" class="input-xlarge">
                        <option value="Dateline Standard Time">(UTC-12:00) International Date Line West</option>
                        <option value="UTC-11">(UTC-11:00) Coordinated Universal Time-11</option>
                        <option value="Hawaiian Standard Time">(UTC-10:00) Hawaii</option>
                        <option value="Alaskan Standard Time">(UTC-09:00) Alaska</option>
                        <option value="Pacific Standard Time (Mexico)">(UTC-08:00) Baja California</option>
                        <option value="Pacific Standard Time">(UTC-08:00) Pacific Time (US & Canada)</option>
                        <option value="US Mountain Standard Time">(UTC-07:00) Arizona</option>
                        <option value="Mountain Standard Time (Mexico)">(UTC-07:00) Chihuahua, La Paz, Mazatlan</option>
                        <option value="Mountain Standard Time">(UTC-07:00) Mountain Time (US & Canada)</option>
                        <option value="Central America Standard Time">(UTC-06:00) Central America</option>
                        <option value="Central Standard Time">(UTC-06:00) Central Time (US & Canada)</option>
                        <option value="Central Standard Time (Mexico)">(UTC-06:00) Guadalajara, Mexico City, Monterrey</option>
                        <option value="Canada Central Standard Time">(UTC-06:00) Saskatchewan</option>
                        <option value="SA Pacific Standard Time">(UTC-05:00) Bogota, Lima, Quito</option>
                        <option value="Eastern Standard Time">(UTC-05:00) Eastern Time (US & Canada)</option>
                        <option value="US Eastern Standard Time">(UTC-05:00) Indiana (East)</option>
                        <option value="Venezuela Standard Time">(UTC-04:30) Caracas</option>
                        <option value="Paraguay Standard Time">(UTC-04:00) Asuncion</option>
                        <option value="Atlantic Standard Timen">(UTC-04:00) Atlantic Time (Canada)</option>
                        <option value="Central Brazilian Standard Time">(UTC-04:00) Cuiaba</option>
                        <option value="SA Western Standard Time">(UTC-04:00) Georgetown, La Paz, Manaus, San Juan</option>
                        <option value="Pacific SA Standard Time">(UTC-04:00) Santiago</option>
                        <option value="Newfoundland Standard Time">(UTC-03:30) Newfoundland</option>
                        <option value="E. South America Standard Time">(UTC-03:00) Brasilia</option>
                        <option value="Argentina Standard Time">(UTC-03:00) Buenos Aires</option>
                        <option value="SA Eastern Standard Time">(UTC-03:00) Cayenne, Fortaleza</option>
                        <option value="Greenland Standard Time">(UTC-03:00) Greenland</option>
                        <option value="Montevideo Standard Time">(UTC-03:00) Montevideo</option>
                        <option value="Bahia Standard Time">(UTC-03:00) Salvador</option>
                        <option value="UTC-02">(UTC-02:00) Coordinated Universal Time-02</option>
                        <option value="Mid-Atlantic Standard Time">(UTC-02:00) Mid-Atlantic</option>
                        <option value="Azores Standard Time">(UTC-01:00) Azores</option>
                        <option value="Cape Verde Standard Time">(UTC-01:00) Cape Verde Is.</option>
                        <option value="Morocco Standard Time">(UTC) Casablanca</option>
                        <option value="UTC">(UTC) Coordinated Universal Time</option>
                        <option value="GMT Standard Time">(UTC) Dublin, Edinburgh, Lisbon, London</option>
                        <option value="Greenwich Standard Time">(UTC) Monrovia, Reykjavik</option>
                        <option value="W. Europe Standard Time">(UTC+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna</option>
                        <option value="Central Europe Standard Time">(UTC+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague</option>
                        <option value="Romance Standard Time">(UTC+01:00) Brussels, Copenhagen, Madrid, Paris</option>
                        <option value="Central European Standard Time">(UTC+01:00) Sarajevo, Skopje, Warsaw, Zagreb</option>
                        <option value="W. Central Africa Standard Time">(UTC+01:00) West Central Africa</option>
                        <option value="Namibia Standard Time">(UTC+01:00) Windhoek</option>
                        <option value="GTB Standard Time">(UTC+02:00) Athens, Bucharest</option>
                        <option value="Middle East Standard Time">(UTC+02:00) Beirut</option>
                        <option value="Egypt Standard Time">(UTC+02:00) Cairo</option>
                        <option value="Syria Standard Time">(UTC+02:00) Damascus</option>
                        <option value="E. Europe Standard Time">(UTC+02:00) E. Europe</option>
                        <option value="South Africa Standard Time">(UTC+02:00) Harare, Pretoria</option>
                        <option value="FLE Standard Time">(UTC+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius</option>
                        <option value="Turkey Standard Time">(UTC+02:00) Istanbul</option>
                        <option value="Israel Standard Time">(UTC+02:00) Jerusalem</option>
                        <option value="Jordan Standard Time">(UTC+03:00) Amman</option>
                        <option value="Arabic Standard Time">(UTC+03:00) Baghdad</option>
                        <option value="Kaliningrad Standard Time">(UTC+03:00) Kaliningrad, Minsk</option>
                        <option value="Arab Standard Time">(UTC+03:00) Kuwait, Riyadh</option>
                        <option value="E. Africa Standard Time">(UTC+03:00) Nairobi</option>
                        <option value="Iran Standard Time">(UTC+03:30) Tehran</option>
                        <option value="Arabian Standard Time">(UTC+04:00) Abu Dhabi, Muscat</option>
                        <option value="Azerbaijan Standard Time">(UTC+04:00) Baku</option>
                        <option value="Russian Standard Time">(UTC+04:00) Moscow, St. Petersburg, Volgograd</option>
                        <option value="Mauritius Standard Time">(UTC+04:00) Port Louis</option>
                        <option value="Georgian Standard Time">(UTC+04:00) Tbilisi</option>
                        <option value="Caucasus Standard Time">(UTC+04:00) Yerevan</option>
                        <option value="Afghanistan Standard Time">(UTC+04:30) Kabul</option>
                        <option value="Pakistan Standard Time">(UTC+05:00) Islamabad, Karachi</option>
                        <option value="West Asia Standard Time">(UTC+05:00) Tashkent</option>
                        <option value="India Standard Time">(UTC+05:30) Chennai, Kolkata, Mumbai, New Delhi</option>
                        <option value="Sri Lanka Standard Time">(UTC+05:30) Sri Jayawardenepura</option>
                        <option value="Nepal Standard Time">(UTC+05:45) Kathmandu</option>
                        <option value="Central Asia Standard Time">(UTC+06:00) Astana</option>
                        <option value="Bangladesh Standard Time">(UTC+06:00) Dhaka</option>
                        <option value="Ekaterinburg Standard Time">(UTC+06:00) Ekaterinburg</option>
                        <option value="Myanmar Standard Time">(UTC+06:30) Yangon (Rangoon)</option>
                        <option value="SE Asia Standard Time">(UTC+07:00) Bangkok, Hanoi, Jakarta</option>
                        <option value="N. Central Asia Standard Time">(UTC+07:00) Novosibirsk</option>
                        <option value="China Standard Time">(UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi</option>
                        <option value="North Asia Standard Time">(UTC+08:00) Krasnoyarsk</option>
                        <option value="Singapore Standard Time">(UTC+08:00) Kuala Lumpur, Singapore</option>
                        <option value="W. Australia Standard Time">(UTC+08:00) Perth</option>
                        <option value="Taipei Standard Time">(UTC+08:00) Taipei</option>
                        <option value="Ulaanbaatar Standard Time">(UTC+08:00) Ulaanbaatar</option>
                        <option value="North Asia East Standard Time">(UTC+09:00) Irkutsk</option>
                        <option value="Tokyo Standard Time">(UTC+09:00) Osaka, Sapporo, Tokyo</option>
                        <option value="Korea Standard Time">(UTC+09:00) Seoul</option>
                        <option value="Cen. Australia Standard Time">(UTC+09:30) Adelaide</option>
                        <option value="AUS Central Standard Time">(UTC+09:30) Darwin</option>
                        <option value="E. Australia Standard Time">(UTC+10:00) Brisbane</option>
                        <option value="AUS Eastern Standard Time">(UTC+10:00) Canberra, Melbourne, Sydney</option>
                        <option value="West Pacific Standard Time">(UTC+10:00) Guam, Port Moresby</option>
                        <option value="Tasmania Standard Time">(UTC+10:00) Hobart</option>
                        <option value="Yakutsk Standard Time">(UTC+10:00) Yakutsk</option>
                        <option value="Central Pacific Standard Time">(UTC+11:00) Solomon Is., New Caledonia</option>
                        <option value="Vladivostok Standard Time">(UTC+11:00) Vladivostok</option>
                        <option value="New Zealand Standard Time">(UTC+12:00) Auckland, Wellington</option>
                        <option value="UTC+12">(UTC+12:00) Coordinated Universal Time+12</option>
                        <option value="Fiji Standard Time">(UTC+12:00) Fiji</option>
                        <option value="Magadan Standard Time">(UTC+12:00) Magadan</option>
                        <option value="Tonga Standard Time">(UTC+13:00) Nuku'alofa</option>
                        <option value="Samoa Standard Time">(UTC+13:00) Samoa</option>
                    </select>
                </div>
            }
        </div>
        <div class="modal-footer">
            <button class="btn" data-dismiss="modal" aria-hidden="true">Close</button>
            <input type="submit" class="btn btn-primary" value="Configure" id="MachineConfiguratingSaveButton" />
        </div>
    }
</div>

<script type="text/javascript">
    $('#MachineConfiguratingSaveButton').on('click', function () {
        var options = {
            //target:        '#output1',   // target element(s) to be updated with server response 
            beforeSubmit: showRequest,  // pre-submit callback 
            success: showResponse,  // post-submit callback 

            // other available options:        
            //type:      type        // 'get' or 'post', override for form's 'method' attribute 
            //dataType:  'text',        // 'xml', 'script', or 'json' (expected server response type) 
            clearForm: false,        // clear all form fields after successful submit 
            resetForm: false,        // reset the form after successful submit 

            // $.ajax options can be used here too, for example: 
            //timeout:   3000 
        };

        // bind form using 'ajaxForm' 
        $('#MachineConfiguratingForm').ajaxForm(options);
        $('#MachineConfiguratingForm').submit();

        return false;
    });

    function showRequest(formData, jqForm, options) {

    }

    function showResponse(responseText, statusText, xhr, $form) {
        // for normal html responses, the first argument to the success callback 
        // is the XMLHttpRequest object's responseText property 

        // if the ajaxForm method was passed an Options Object with the dataType 
        // property set to 'xml' then the first argument to the success callback 
        // is the XMLHttpRequest object's responseXML property 

        // if the ajaxForm method was passed an Options Object with the dataType 
        // property set to 'json' then the first argument to the success callback 
        // is the json data object returned by the server 

        if (responseText == true) {
            $('#MachineConfiguratingModal').modal('hide');
            showSuccessAlert();
        }
    }

    $('#MachineConfiguratingModal').on('hide', function () {
        $('#MachineConfiguratingForm').find(':text, :password').each(function () {
            $(this).val('');
        });

        $('#MachineConfiguratingForm').find('.field-validation-error').empty();
        $('#MachineConfiguratingForm').validate().resetForm();
    });

    function showSuccessAlert() {
        $('#alertArea').append("<div class='alert alert-block alert-success fade in' id='successAlert'>" +
            "<button type='button' class='close' data-dismiss='alert'>×</button>" +
            "<h4 class='alert-heading'>Machine configuring has been started!</h4>" +
            "<p>Please, wait. This will take a few minutes. We will send you an email after completing this task.</p>");

        $('#successAlert').bind('closed', function () {
            if ($('#alertArea').children().length == 0) {
                $('#alertArea').fadeOut('slow');
            }
        });

        $('#alertArea').fadeIn('slow');
    }
    
    $("[rel=popover]").on("hide", function (e) {
        e.stopPropagation(); //Once popover is hidden stop the event from going to parent
    });
</script>
