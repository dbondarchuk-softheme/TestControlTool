@{
    Layout = null;
}

@Scripts.Render("~/bundles/jqueryval")
<div class="modal hide fade" id="TestSuiteModal" tabindex="-1" role="dialog" aria-labelledby="Test Suite" aria-hidden="true">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
        <h3 id="TestSuiteLabel">Add new Test Suite</h3>
    </div>
    <div class="modal-body">
        <div class="control-group">
            <label class="control-label" for="TestSuiteName" style="display: inline;">Name&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</label>
            <div class="controls" style="display: inline;">
                <input type="text" id="TestSuiteName" onblur="CheckTestSuiteName()" onfocus="$('#TestSuiteNameValidation').text('');" />    
                <span class="help-inline error" id="TestSuiteNameValidation"></span>
            </div>
        </div>
        <input type="hidden" id="EditTestSuiteName" />
        <div class="control-group">
            <label class="control-label" for="TestSuiteMachine" style="display: inline;">Machine for execution</label>
            <div class="controls" style="display: inline;">
                <select id="TestSuiteMachine" onchange="CheckTestSuiteMachine()">
                          <option value="-1">Please select machine</option>
                          @foreach (var machine in TestControlTool.Web.TestControlToolApplication.AccountController.CachedAccounts.Single(x => x.Login == User.Identity.Name).Machines)
                          {
                              <option value="@machine.Id">@machine.Name</option>
                          }
                      </select>
                <a href="#" id="TestSuiteMachineHelp" onclick="return false;" data-toogle="popover" data-content="Your tasks are executed on this machine. It's good to have a separate VM for this purpose." data-title="What's this?" rel="popover" data-trigger="hover"><i class="icon-question-sign"></i></a>
                <span class="help-inline error" id="TestSuiteMachineValidation"></span>
            </div>
       </div>
        <div class="control-group">
            <label class="control-label" for="TestSuiteTests" style="cursor: default;">
                Tests:&nbsp;&nbsp;&nbsp;
            <button type="button" class="close" aria-hidden="true" onclick="addTest();" title="Add new test">+</button>
            </label>
            <p style="display: none">
                <span class="help-inline error" id="TestSuiteTestsValidation"></span>
            </p>
            <ol style="margin-left: 10%" id ="testsList" class="sortable">
            </ol>
        </div>
    </div>
    <div class="modal-footer">
        <button class="btn" data-dismiss="modal" aria-hidden="true">Close</button>
        <input type="submit" class="btn btn-primary" value="Add" id="SaveTestSuiteButton" onclick="saveTestSuiteJob()" />
    </div>
</div>
<div id="NewTestModalDiv" style="display: none;"></div>


<script type="text/javascript">
    $(function () {
        $("#testsList").sortable();
        $("#testsList").disableSelection();
    });

    var isEditTestModal = false;
    var testToEdit;
    
    $("#TestSuiteMachineHelp").on("hidden", function (e) {
        e.stopPropagation(); //Once popover is hidden stop the event from going to parent
    });
    
    $('#TestSuiteModal').on('hidden', function () {
        $('#TestSuiteName').val('');
        $('#TestSuiteMachine').val('-1');

        $('#TestSuiteNameValidation').text('');
        $('#TestSuiteMachineValidation').text('');
        $('#TestSuiteLabel').text('Add new Test Suite');
        $('#SaveTestSuiteButton').val('Add');
        $('#testsList').text('');

        $('#EditTestSuiteName').val('');

        isEditTestSuiteModal = false;
    });
    
    $('#TestSuiteModal').on('show', function () {
        var url = '@Url.Action("NewTestModal", "Task")' + '?type=' + suiteType;

        $('#NewTestModalDiv').load(url);
    });

    function addTest() {
        /*$('#TestSuiteModal').fadeOut('slow');*/
        $('#NewTestModal').modal('show');
    }

    function saveTestSuiteJob() {
        if (isEditTestSuiteModal) editTestSuite();
        else {
            addTestSuite();
        }
    }
    
    function addTestSuite() {
        if (!CheckTestSuiteName() || !CheckTestSuiteMachine()) {
            return false;
        }
        
        var name = $('#TestSuiteName').val();
        
        var li = "<li id='" + name + "' type='" + suiteType + "' machine='" + $('#TestSuiteMachine').val() + "' json='" + getJsonFromTests() + "'>" +
            "<a onclick=\"editTestSuiteTask(this)\" href='#'>" + name + "</a>" +
            "<button type='button' class='close' aria-hidden='true' onclick=\"removeItem(this)\">×</button></li>";
        
        $('#currentTasks').append(li);
        
        $('#TestSuiteModal').modal('hide');
    }
    
    function editTestSuite() {
        if (!CheckTestSuiteName() || !CheckTestSuiteMachine()) {
            return false;
        }
        
        var name = $('#TestSuiteName').val();

        var li = "<li id='" + name + "' type='" + suiteType + "' machine='" + $('#TestSuiteMachine').val() + "' json='" + getJsonFromTests() + "'>" +
            "<a onclick=\"editTestSuiteTask(this)\" href='#'>" + name + "</a>" +
            "<button type='button' class='close' aria-hidden='true' onclick=\"removeItem(this)\">×</button></li>";

        $(testSuiteToEdit).replaceWith(li);

        $('#TestSuiteModal').modal('hide');
    }

    function CheckTestSuiteName() {
        var name = $('#TestSuiteName').val();

        if (name.length == 0) {
            $('#TestSuiteNameValidation').text('Please, check job\'s name');
            canSave = false;
            return false;
        }
        
        if (!(/^\w+$/.test(name))) {
            $('#TestSuiteNameValidation').text('Job\'s name should contain only letters, numbers and \'_\' symbol');
            canSave = false;
            return false;
        }

        var names = new Array;

        $('#currentTasks li').each(function (e) {
            names.push($(this).attr('id'));
        });

        for (var i = 0; i < names.length; i++) {
            if (name == names[i] && name != $('#EditTestSuiteName').val()) {
                $('#TestSuiteNameValidation').text('Such name is already presented');
                canSave = false;
                return false;
            }
        }

        $('#TestSuiteNameValidation').text('');
        canSave = true;
        return true;
    }
    
    function CheckTestSuiteMachine() {
        if ($('#TestSuiteMachine').val() == "-1") {
            $('#TestSuiteMachineValidation').text('Please, select the machine');

            canSave = false;
            return false;
        }

        $('#TestSuiteMachineValidation').text('');
        canSave = true;
        return true;
    }
    
    function editTestModal(object) {
        $('#NewTestLabel').text('Edit Test');
        $('#AddTestButton').val('Apply');
        $('#NewTestType').val($(object).parent().attr('testtype'));
        $('#NewTestType').prop('disabled', 'disabled');
        testToEdit = $(object).parent();

        loadTestFormForType($(object).parent().attr('testtype'), function() {
            fillFormWithObject('testFormDiv', JSON.parse($(object).parent().attr('json')));
            
            isEditTestModal = true;
            $('#NewTestModal').modal('show');
        });
    }

    function getJsonFromTests() {
        var jsonObject = '[';

        $('#testsList').children('li').each(function() {
            jsonObject += ' { "type" : "' + $(this).attr('testtype') + '", "object" : ' +  $(this).attr('json') + ' },';
        });

        jsonObject = jsonObject.replace(/,$/, "") + ' ]';

        return jsonObject;
    }
</script>
