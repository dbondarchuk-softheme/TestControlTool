@{
    Layout = null;
}

<link href="@Url.Content("~/Content/bootstrap-fileupload.min.css")" rel="stylesheet" />
<script src="@Url.Content("~/Scripts/bootstrap-fileupload.min.js")"></script>
<script src="@Url.Content("~/Scripts/jquery.form.min.js")"></script>

<div class="modal hide fade" id="UploadTestSuiteXmlModal" tabindex="-1" role="dialog" aria-labelledby="Upload Test Suite Xml" aria-hidden="true">
    <form id="UploadTestSuiteXmlForm" method="POST" enctype="multipart/form-data">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
            <h3 id="TestSuiteLabel">Upload Test Suite Xml</h3>
        </div>
        <div class="modal-body">
            <div class="control-group">
                <label class="control-label" for="TestSuiteName">
                    Select file to upload
                </label>
                <div class="controls">
                    <div class="fileupload fileupload-new" data-provides="fileupload">
                        <div class="input-append">
                            <div class="uneditable-input span3"><i class="icon-file fileupload-exists"></i><span class="fileupload-preview" id="fileName"></span></div>
                            <span class="btn btn-file"><span class="fileupload-new">Select file</span><span class="fileupload-exists">Change</span><input type="file" name="file" id="file" /></span>
                            <a href="#" class="btn fileupload-exists" data-dismiss="fileupload" id="RemoveFileButton">Remove</a>
                        </div>
                    </div>
                    <span class="help-inline error" id="UploadTestSuiteXmlValidation"></span>
                </div>
            </div>
        </div>
        <div class="modal-footer">
            <button class="btn" data-dismiss="modal" aria-hidden="true">Close</button>
            <input type="submit" class="btn btn-primary" value="Upload" id="UploadTestSuiteXmlButton" />
        </div>
    </form>
</div>



<script type="text/javascript">
    $('#UploadTestSuiteXmlModal').on('hide', function() {
        $('#RemoveFileButton').click();
        $('#UploadTestSuiteXmlValidation').text('');
    });

    $(document).ready(function() { 
        var options = { 
            //target:        '#output1',   // target element(s) to be updated with server response 
            beforeSubmit:  showRequest,  // pre-submit callback 
            success: showResponse,  // post-submit callback 
 
            // other available options: 
            url:       "@Url.Action("UploadTestSuiteXml", "Task")" + "/" + taskId,         // override for form's 'action' attribute 
            //type:      type        // 'get' or 'post', override for form's 'method' attribute 
            //dataType:  'text',        // 'xml', 'script', or 'json' (expected server response type) 
            clearForm: true,        // clear all form fields after successful submit 
            resetForm: true,        // reset the form after successful submit 
 
            // $.ajax options can be used here too, for example: 
            //timeout:   3000 
        }; 
 
        // bind form using 'ajaxForm' 
        $('#UploadTestSuiteXmlForm').ajaxForm(options); 
    });
    
    function showRequest(formData, jqForm, options) {
        $('#UploadTestSuiteXmlValidation').html('<img src="@Url.Content("~/Content/images/select2-spinner.gif")"/>');

        if ($('#fileName').text().length == 0) {
            $('#UploadTestSuiteXmlValidation').text('Please select the xml file');
            return false;
        }

        $('#UploadTestSuiteXmlValidation').text();
        var fileName = $('#fileName').text();
        var splitted = fileName.split('.');
        var extension = "." + splitted[splitted.length - 1];
        
        for (var i = 0; i < alreadyChildren.length; i++) {
            if (alreadyChildren[i] + extension == fileName) {
                $('#UploadTestSuiteXmlValidation').text('You have already have child with such name');
                return false;
            }
        }
    }

    function showResponse(responseText, statusText, xhr, $form) {
        // for normal html responses, the first argument to the success callback 
        // is the XMLHttpRequest object's responseText property 

        // if the ajaxForm method was passed an Options Object with the dataType 
        // property set to 'xml' then the first argument to the success callback 
        // is the XMLHttpRequest object's responseXML property 

        // if the ajaxForm method was passed an Options Object with the dataType 
        // property set to 'json' then the first argument to the success callback 
        // is the json data object returned by the server 

        if (responseText == "error1") {
            $('#UploadTestSuiteXmlValidation').text('You don\'t have such task');
        } else if (responseText == "error2") {
            $('#UploadTestSuiteXmlValidation').text('Please select xml file');
        } else if (responseText == "error3") {
            $('#UploadTestSuiteXmlValidation').text('Some error occured during parsing a file. Please check your xml file');
        } else {
            $('#currentTasks').append($(responseText));
            $('#UploadTestSuiteXmlModal').modal('hide');
        }
    }
</script>

