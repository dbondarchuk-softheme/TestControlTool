@using BootstrapSupport
@using TestControlTool.Core.Models
@using TestControlTool.Web.Models
@model TaskChildsModel
@{
    ViewBag.Title = "Create task";
}

@Scripts.Render("~/bundles/jqueryval")
@Scripts.Render("~/bundles/jqueryui")
@Styles.Render("~/Content/themes/base/css")
<script src="@Url.Content("~/Scripts/jquery.listAttributes.js")"></script>

@{
    Html.RenderAction("DeployInstallJobModal");
    Html.RenderPartial("TestSuiteModal");
    Html.RenderPartial("CalendarModal");
    Html.RenderPartial("UploadTestSuiteXml");
}

<div class="container-fluid">
    <div id="alertArea" style="display: none;"></div>
    <div class="row-fluid">
        <h2>Create task</h2>
    </div>
    <div class="row-fluid">
        <form id="taskForm">
            <div class="span4">
                <fieldset class="form-horizontal" style="padding: 1px;">
                    <legend>Task <small>Details</small></legend>
                    @using (Html.ControlGroupFor(x => x.Task.Name))
                    {
                        @Html.LabelFor(x => x.Task.Name, new { @class = "control-label" })
                        <div class="controls">
                            @Html.EditorFor(x => x.Task.Name, new { @class = "input-xlarge" })
                            @Html.ValidationMessageFor(x => x.Task.Name, null, new { @class = "help-inline" })
                        </div>
                    }
                    @using (Html.ControlGroupFor(x => x.Task.StartTime))
                    {
                        @Html.Label("", "Schedule", new { @class = "control-label" })
                        <div class="controls">
                            <a onclick="showCalendar(); return false;" href="#" id="scheduleText"></a>
                        </div>
                    }
                    @using (Html.ControlGroupFor(x => x.Task.IsEnabled))
                    {
                        @Html.LabelFor(x => x.Task.IsEnabled, new { @class = "control-label" })
                        <div class="controls">
                            @Html.CheckBoxFor(x => x.Task.IsEnabled, new { @class = "input-xlarge" })
                            @Html.ValidationMessageFor(x => x.Task.IsEnabled, null, new { @class = "help-inline" })
                        </div>
                    }
                    @Html.HiddenFor(x => x.Task.Frequency)
                    @Html.HiddenFor(x => x.Task.StartTime)
                    @Html.HiddenFor(x => x.Task.EndTime)
                    
                    <div class="control-group">
                        <label class="control-label">
                            <button class="btn-primary btn-large" onclick="saveTasks('@Model.Task.Id', '@Url.Action("Create", "Task")', '@Url.Action("Index", "Task")'); return false;" style="margin-left: auto;">Save</button>
                        </label>
                        <div class="controls"></div>
                    </div>
                </fieldset>
            </div>
            @Html.EditorFor(x => x.Task.Id)
            <div class="span4">
                <fieldset class="form-horizontal">
                    <legend>Task <small>Jobs</small>
                    </legend>
                    <ul id="currentTasks" class="sortable">
                        <br />
                    </ul>
                    <div class="btn-group">
                        <a class="btn dropdown-toggle" data-toggle="dropdown" href="#">Add new<span class="caret"></span></a>
                        <ul class="dropdown-menu">
                            <li><a data-toggle="modal" href="#DeployInstallJobModal">DeployInstall Job</a></li>
                            <li class="divider"></li>
                            <li><a data-toggle="modal" href="#" onclick="showNewTestSuite(true); return false;">Test Suite for Trunk</a></li>
                            <li><a data-toggle="modal" href="#" onclick="showNewTestSuite(false); return false;">Test Suite for Release</a></li>
                        </ul>
                    </div>
                    <div class="btn-group">
                        <a class="btn dropdown-toggle" data-toggle="dropdown" href="#">Upload exesisting xml<span class="caret"></span></a>
                        <ul class="dropdown-menu">
                            <li><a data-toggle="modal" href="#" onclick="showUploadTestSuiteModal(true); return false;">Test Suite for Trunk</a></li>
                            <li><a data-toggle="modal" href="#" onclick="showUploadTestSuiteModal(false); return false;">Test Suite for Release</a></li>
                        </ul>
                    </div>
                </fieldset>
            </div>
        </form>
    </div>
</div>
<script src="~/Scripts/EditTask.js"></script>
<script src="~/Scripts/getRepetitionTextInternal.js"></script>
<script type="text/javascript">
    var taskId = '@Model.Task.Id';
    
    $('#scheduleText').text(getRepetitonText());

    $(function () {
        $("#currentTasks").sortable();
        $("#currentTasks").disableSelection();
    });

    ShowTasks();
</script>
